
AVRASM ver. 1.74  imperial_march_song.asm Fri Sep 16 19:30:25 2011


         ; *****************************************************************************
         ; Proyect: Imperial March Song (Intro)
         ; Author:  Matias Quintana Rosales
         ; Purpose: Shally
         ; Date: inicio - 19/8/2011
         ;       fin    -
         ;       fecha de entrega - 20/10/11
         ; *****************************************************************************
         
          .include "C:\VMLAB\include\m8def.inc"
         ;***************************************************************************
         ;* A P P L I C A T I O N   N O T E   F O R   T H E   A V R   F A M I L Y
         ;* 
         ;* Number				:AVR000
         ;* File Name			:"m8def.inc"
         ;* Title				:Register/Bit Definitions for the ATmega8
         ;* Date                 :07.09.2001
         ;* Version              :1.00
         ;* Support telephone	:+47 72 88 43 88 (ATMEL Norway)
         ;* Support fax			:+47 72 88 43 99 (ATMEL Norway)
         ;* Support E-mail		:avr@atmel.no
         ;* Target MCU			:ATmega8
         ;*
         ;* DESCRIPTION
         ;* When including this file in the assembly program file, all I/O register	
         ;* names and I/O register bit names appearing in the data book can be used.
         ;* In addition, the six registers forming the three data pointers X, Y and
         ;* Z have been assigned names XL - ZH. Highest RAM address for Internal 
         ;* SRAM is also defined 
         ;*
         ;* The Register names are represented by their hexadecimal address.
         ;* 
         ;* The Register Bit names are represented by their bit number (0-7).
         ;* 
         ;* Please observe the difference in using the bit names with instructions
         ;* such as "sbr"/"cbr" (set/clear bit in register) and "sbrs"/"sbrc" 
         ;* (skip if bit in register set/cleared). The following example illustrates
         ;* this:
         ;* 
         ;* in	r16,PORTB				;read PORTB latch
         ;* sbr	r16,(1<<PB6)+(1<<PB5)	;set PB6 and PB5 (use masks, not bit#)
         ;* out  PORTB,r16				;output to PORTB
         ;*
         ;* in	r16,TIFR				;read the Timer Interrupt Flag Register
         ;* sbrc	r16,TOV0				;test the overflow flag (use bit#)
         ;* rjmp	TOV0_is_set				;jump if set
         ;* ...							;otherwise do something else
         ;***************************************************************************
         
         ;***** Specify Device
          .device ATmega8
         
         ;***** I/O Register Definitions
          .equ	SREG	=$3f
          .equ	SPH		=$3e
          .equ	SPL		=$3d
          .equ	GIMSK	=$3b
          .equ	GICR	=$3b		; new name for GIMSK
          .equ	GIFR	=$3a
          .equ	TIMSK	=$39
          .equ	TIFR	=$38
          .equ	SPMCR	=$37
          .equ    I2CR    =$36
          .equ    TWCR    =$36
          .equ    MCUCR   =$35
          .equ    MCUSR   =$34		; For compatibility, 
          .equ    MCUCSR  =$34		; keep both names until further
          .equ	TCCR0	=$33
          .equ	TCNT0	=$32
          .equ    OSCCAL  =$31
          .equ    SFIOR   =$30
          .equ	TCCR1A	=$2f
          .equ	TCCR1B	=$2e
          .equ	TCNT1H	=$2d
          .equ	TCNT1L	=$2c
          .equ	OCR1AH	=$2b
          .equ	OCR1AL	=$2a
          .equ	OCR1BH	=$29
          .equ	OCR1BL	=$28
          .equ	ICR1H	=$27
          .equ	ICR1L	=$26
          .equ	TCCR2	=$25
          .equ	TCNT2	=$24
          .equ	OCR2	=$23
          .equ	ASSR	=$22
          .equ	WDTCR	=$21
          .equ    UBRRH   =$20		;  Note! UCSRC equals UBRRH
          .equ	EEARH	=$1f
          .equ	EEARL	=$1e
          .equ	EEDR	=$1d
          .equ	EECR	=$1c
          .equ	PORTB	=$18
          .equ	DDRB	=$17
          .equ	PINB	=$16
          .equ	PORTC	=$15
          .equ	DDRC	=$14
          .equ	PINC	=$13
          .equ	PORTD	=$12
          .equ	DDRD	=$11
          .equ	PIND	=$10
          .equ	SPDR	=$0f
          .equ	SPSR	=$0e
          .equ	SPCR	=$0d
          .equ	UDR	=$0c
          .equ	UCSRA	=$0b
          .equ	UCSRB	=$0a
          .equ	UCSRC	=$20		;  Note! UCSRC equals UBRRH
          .equ	UBRRL	=$09
          .equ	ACSR	=$08
          .equ    ADMUX   =$07
          .equ    ADCSR   =$06
          .equ    ADCH    =$05
          .equ    ADCL    =$04
          .equ    I2DR    =$03
          .equ    I2AR    =$02
          .equ    I2SR    =$01
          .equ    I2BR    =$00
          .equ    TWDR    =$03
          .equ    TWAR    =$02
          .equ    TWSR    =$01
          .equ    TWBR    =$00
         
         
         
         ;***** Bit Definitions
         ;GICR  (former GIMSK)
          .equ	INT1	=7
          .equ	INT0	=6
          .equ	IVSEL	=1		; interrupt vector select
          .equ	IVCE	=0		; interrupt vector change enable
         
         ;GIFR
          .equ	INTF1	=7
          .equ	INTF0	=6
         
         ;TIMSK
          .equ    TOIE0   =0
          .equ    TOIE1   =2
          .equ    OCIE1B  =3
          .equ    OCIE1A  =4
          .equ    TICIE1  =5
          .equ    TOIE2   =6
          .equ    OCIE2   =7
         
         ;TIFR
          .equ    TOV0    =0
          .equ    TOV1    =2
          .equ    OCF1B   =3
          .equ    OCF1A   =4
          .equ    ICF1    =5
          .equ    TOV2    =6
          .equ    OCF2    =7
         
         ;SPMCR
          .equ	SPMIE	=7
          .equ	RWWSB	=6
          .equ	RWWSRE	=4
          .equ	BLBSET	=3
          .equ	PGWRT	=2
          .equ	PGERS	=1
          .equ	SPMEN	=0
         
         ;MCUCR
          .equ    SE      =7
          .equ    SM2     =6
          .equ    SM1     =5
          .equ    SM0     =4
          .equ    ISC11   =3
          .equ    ISC10   =2
          .equ    ISC01   =1
          .equ    ISC00   =0
         
         ;MCUCSR
          .equ    WDRF    =3
          .equ    BORF    =2
          .equ    EXTRF   =1
          .equ    PORF    =0
         
         ;TCCR0
          .equ	CS02	=2
          .equ	CS01	=1
          .equ	CS00	=0
         
         ;TCCR1A
          .equ	COM1A1	=7
          .equ	COM1A0	=6
          .equ	COM1B1	=5
          .equ	COM1B0	=4
          .equ	FOC1A	=3
          .equ	FOC1B	=2
          .equ	PWM11	=1	; OBSOLETE! Use WGM11
          .equ	PWM10	=0	; OBSOLETE! Use WGM10
          .equ	WGM11	=1
          .equ	WGM10	=0
         ;TCCR1B
          .equ	ICNC1	=7
          .equ	ICES1	=6
          .equ	CTC11	=4	; OBSOLETE! Use WGM13
          .equ	CTC10	=3	; OBSOLETE! Use WGM12
          .equ	WGM13	=4
          .equ	WGM12	=3	
          .equ	CTC1	=3		; Obsolete - Included for backward compatibility
          .equ	CS12	=2
          .equ	CS11	=1
          .equ	CS10	=0
         
         ;TCCR2
          .equ	FOC2	=7
          .equ    PWM2    =6	; OBSOLETE! Use WGM20
          .equ	WGM20	=6	
          .equ    COM21   =5
          .equ    COM20   =4
          .equ    CTC2    =3	; OBSOLETE! Use WGM21
          .equ	WGM21	=3	
          .equ    CS22    =2
          .equ    CS21    =1
          .equ    CS20    =0
         
         ;SFIOR
          .equ    ADHSM   =4
          .equ    ACME    =3
          .equ    PUD     =2
          .equ	PSR2	=1
          .equ	PSR10	=0
         
         ;WDTCR
          .equ	WDCE	=4
          .equ	WDTOE	=4
          .equ	WDE	=3
          .equ	WDP2	=2
          .equ	WDP1	=1
          .equ	WDP0	=0
         
         ;EECR
          .equ    EERIE   =3
          .equ	EEMWE	=2
          .equ	EEWE	=1
          .equ	EERE	=0
         
         ;PORTB
          .equ	PB7	=7
          .equ	PB6	=6
          .equ	PB5	=5
          .equ	PB4	=4
          .equ	PB3	=3
          .equ	PB2	=2
          .equ	PB1	=1
          .equ	PB0	=0
         
         ;DDRB
          .equ	DDB7	=7
          .equ	DDB6	=6
          .equ	DDB5	=5
          .equ	DDB4	=4
          .equ	DDB3	=3
          .equ	DDB2	=2
          .equ	DDB1	=1
          .equ	DDB0	=0
         
         ;PINB
          .equ	PINB7	=7
          .equ	PINB6	=6
          .equ	PINB5	=5
          .equ	PINB4	=4
          .equ	PINB3	=3
          .equ	PINB2	=2
          .equ	PINB1	=1
          .equ	PINB0	=0
         
         ;PORTC
          .equ	PC6	=6
          .equ	PC5	=5
          .equ	PC4	=4
          .equ	PC3	=3
          .equ	PC2	=2
          .equ	PC1	=1
          .equ	PC0	=0
         
         ;DDRC
          .equ	DDC6	=6
          .equ	DDC5	=5
          .equ	DDC4	=4
          .equ	DDC3	=3
          .equ	DDC2	=2
          .equ	DDC1	=1
          .equ	DDC0	=0
         
         ;PINC
          .equ	PINC6	=6
          .equ	PINC5	=5
          .equ	PINC4	=4
          .equ	PINC3	=3
          .equ	PINC2	=2
          .equ	PINC1	=1
          .equ	PINC0	=0
         
         ;PORTD
          .equ	PD7	=7
          .equ	PD6	=6
          .equ	PD5	=5
          .equ	PD4	=4
          .equ	PD3	=3
          .equ	PD2	=2
          .equ	PD1	=1
          .equ	PD0	=0
         
         ;DDRD
          .equ	DDD7	=7
          .equ	DDD6	=6
          .equ	DDD5	=5
          .equ	DDD4	=4
          .equ	DDD3	=3
          .equ	DDD2	=2
          .equ	DDD1	=1
          .equ	DDD0	=0
         
         ;PIND
          .equ	PIND7	=7
          .equ	PIND6	=6
          .equ	PIND5	=5
          .equ	PIND4	=4
          .equ	PIND3	=3
          .equ	PIND2	=2
          .equ	PIND1	=1
          .equ	PIND0	=0
         
         ;UCSRA
          .equ	RXC	=7
          .equ	TXC	=6
          .equ	UDRE	=5
          .equ	FE	=4
          .equ	OR	=3		; old name kept for compatibilty
          .equ	DOR	=3
          .equ	UPE	=2
          .equ	PE	=2
          .equ	U2X	=1
          .equ	MPCM	=0
         
         ;UCSRB
          .equ	RXCIE	=7
          .equ	TXCIE	=6
          .equ	UDRIE	=5
          .equ	RXEN	=4
          .equ	TXEN	=3
          .equ	CHR9	=2		; old name kept for compatibilty
          .equ	UCSZ2	=2
          .equ	RXB8	=1
          .equ	TXB8	=0
         
         ;UCSRC
          .equ	URSEL	=7
          .equ	UMSEL	=6
          .equ	UPM1	=5
          .equ	UPM0	=4
          .equ	USBS	=3
          .equ	UCSZ1	=2
          .equ	UCSZ0	=1
          .equ	UCPOL	=0
         		
         ;SPCR
          .equ	SPIE	=7
          .equ	SPE	=6
          .equ	DORD	=5
          .equ	MSTR	=4
          .equ	CPOL	=3
          .equ	CPHA	=2
          .equ	SPR1	=1
          .equ	SPR0	=0
         
         ;SPSR
          .equ	SPIF	=7
          .equ	WCOL	=6
          .equ	SPI2X	=0
         
         ;ACSR
          .equ	ACD	=7
          .equ    ACBG    =6
          .equ	ACO	=5
          .equ	ACI	=4
          .equ	ACIE	=3
          .equ	ACIC	=2
          .equ	ACIS1	=1
          .equ	ACIS0	=0
         
         ;ADMUX
          .equ    REFS1   =7
          .equ    REFS0   =6
          .equ    ADLAR   =5
          .equ    MUX3    =3
          .equ    MUX2    =2
          .equ    MUX1    =1
          .equ    MUX0    =0
         
         ;ADCSR
          .equ    ADEN    =7
          .equ    ADSC    =6
          .equ    ADFR    =5
          .equ    ADIF    =4
          .equ    ADIE    =3
          .equ    ADPS2   =2
          .equ    ADPS1   =1
          .equ    ADPS0   =0
         
         ; TWCR
          .equ    TWINT   =7
          .equ    TWEA    =6
          .equ    TWSTA   =5
          .equ    TWSTO   =4
          .equ    TWWC    =3
          .equ    TWEN    =2
         
          .equ    TWIE    =0
         
         ; TWAR
          .equ    TWA6    =7
          .equ    TWA5    =6
          .equ    TWA4    =5
          .equ    TWA3    =4
          .equ    TWA2    =3
          .equ    TWA1    =2
          .equ    TWA0    =1
          .equ    TWGCE   =0
         
         ; TWSR
          .equ    TWS7    =7
          .equ    TWS6    =6
          .equ    TWS5    =5
          .equ    TWS4    =4
          .equ    TWS3    =3
          .equ	TWPS1	=1
          .equ	TWPS0	=0
         
         ;ASSR
          .equ    AS2     =3
          .equ    TCN2UB  =2
          .equ    OCR2UB  =1
          .equ    TCR2UB  =0
         
          .def	XL	=r26
          .def	XH	=r27
          .def	YL	=r28
          .def	YH	=r29
          .def	ZL	=r30
          .def	ZH	=r31
         
          .equ 	RAMEND =$45F
          .equ	FLASHEND =$FFF
         
         						;  byte groups
         						;  /\/--\/--\/--\ 
          .equ 	SMALLBOOTSTART	=0b00111110000000  ;($0F80) smallest boot block is 256
          .equ 	SECONDBOOTSTART	=0b00111100000000  ;($0F00) 2'nd boot block size is 512
          .equ 	THIRDBOOTSTART	=0b00111000000000  ;($0E00) third boot block size is 1K
          .equ 	LARGEBOOTSTART	=0b00110000000000  ;($0C00) largest boot block is 2K
          .equ 	BOOTSTART		=THIRDBOOTSTART  ;OBSOLETE!!! kept for compatibility
          .equ	PAGESIZE		=32     ;number of WORDS in a page
         
          .equ	INT0addr=$001	; External Interrupt0 Vector Address
          .equ	INT1addr=$002	; External Interrupt1 Vector Address
          .equ	OC2addr =$003	; Output Compare2 Interrupt Vector Address
          .equ	OVF2addr=$004	; Overflow2 Interrupt Vector Address
          .equ	ICP1addr=$005	; Input Capture1 Interrupt Vector Address
          .equ	OC1Aaddr=$006	; Output Compare1A Interrupt Vector Address
          .equ	OC1Baddr=$007	; Output Compare1B Interrupt Vector Address
          .equ	OVF1addr=$008	; Overflow1 Interrupt Vector Address
          .equ	OVF0addr=$009	; Overflow0 Interrupt Vector Address
          .equ	SPIaddr =$00a	; SPI Interrupt Vector Address
          .equ	URXCaddr=$00b	; USART Receive Complete Interrupt Vector Address
          .equ	UDREaddr=$00c	; USART Data Register Empty Interrupt Vector Address
          .equ	UTXCaddr=$00d	; USART Transmit Complete Interrupt Vector Address
          .equ	ADCCaddr=$00e	; ADC Interrupt Vector Address
          .equ	ERDYaddr=$00f	; EEPROM Interrupt Vector Address
          .equ	ACIaddr =$010	; Analog Comparator Interrupt Vector Address
          .equ    TWIaddr =$011   ; Irq. vector address for Two-Wire Interface
          .equ	SPMaddr =$012	; SPM complete Interrupt Vector Address
          .equ	SPMRaddr =$012	; SPM complete Interrupt Vector Address
          .def temp     = r16
          .def cont10ms = r17
          .def sonar    = r18 ; O : nota
         						  ; 1 : silencio
          .def sec1     = r19
          .def sec2     = r20
          .def silencio = r21
          .def cont 	  = r22
          .def notas    = r23
          .def aux      = r24
         
         
         
          reset:
000000 c02c         rjmp start
000001 9518         reti      ; Addr $01
000002 9518         reti      ; Addr $02
000003 9518         reti      ; Addr $03
000004 9518         reti      ; Addr $04
000005 9518         reti      ; Addr $05
000006 c00a         rjmp isr_oc1a; Addr $06        Use 'rjmp myVector'
000007 9518         reti      ; Addr $07        to define a interrupt vector
000008 9518         reti      ; Addr $08
000009 9518         reti      ; Addr $09
00000a 9518         reti      ; Addr $0A
00000b 9518         reti      ; Addr $0B        This is just an example
00000c 9518         reti      ; Addr $0C        Not all MCUs have the same
00000d 9518         reti      ; Addr $0D        number of interrupt vectors
00000e 9518         reti      ; Addr $0E
00000f 9518         reti      ; Addr $0F
000010 9518         reti      ; Addr $10
         
         
         
         ;******************************************************************************
         ;******************************************************************************
         ;**********************  SUBRUTINA DE INTERRUPCION  ***************************
         ;******************************************************************************
         ;******************************************************************************
         
          isr_oc1a:
000011 930f         push temp
000012 b70f      	in temp, sreg
000013 930f      	push temp
000014 1761      	cp cont, cont10ms   ;compara con el tiempo de espera deseado
000015 f011      	breq pasaron10ms
000016 9563      	inc cont            ;sino, incrementa el cont de entradas
000017 c008         rjmp salir_isr
         
          pasaron10ms:
000018 e060      	ldi cont, 0			  ;reiniciamos el contador
000019 3020      	cpi sonar, 0        ;es el silencio de la nota o del silencio en si?
00001a f009      	breq silencio_sonar
00001b c002         rjmp silencio_silencio
         
          silencio_sonar:     ;sonar = 0
         
00001c e051      	ldi silencio, 1
00001d c002      	rjmp salir_isr
         	
          silencio_silencio:  ;sonar = 1
         
00001e e050      	ldi silencio, 0	
00001f c000      	rjmp salir_isr
         	
          salir_isr:
         	
000020 910f      	pop temp
000021 bf0f      	out sreg, temp
000022 910f      	pop temp
000023 9518      	reti
         
         ;******************************************************************************
         ;******************************************************************************
         ;**********************     CONFIGURACION TIMER1    ***************************
         ;******************************************************************************
         ;******************************************************************************
         ;                           Modo CTC con OCR1A
         ;                 0<<WGM13 1<<WGM12  0<<WGM11 0<<WGM10
         ;
         ;                          Preescalador = 1
         ;                       0<<CS12 0<<CS11 1<<CS10
         ;
         ;                      interrupciones habilitadas
         ;                              1<<OCIE1A
         ;
         ;                    generador de ondas habilitado
         ;                          0<<COM1A1 1<<COM1A0
         
          conf_timer1:
000024 930f      	push temp
000025 e400      	ldi temp, (0<<COM1A1)|(1<<COM1A0)|(0<<WGM11)|(0<<WGM10)
000026 bd0f      	out TCCR1A, temp
000027 e009      	ldi temp, (0<<WGM13) |(1<<WGM12) | (1<<CS10)
000028 bd0e      	out TCCR1B, temp
000029 e100      	ldi temp, 1<<OCIE1A
00002a bf09      	out TIMSK, temp
00002b 910f      	pop temp
00002c 9508      	ret	
         	
         ;******************************************************************************
         ;******************************************************************************
         ;**********************    PROGRAMA PRINCIPAL  ********************************
         ;******************************************************************************
         ;******************************************************************************
         ; 										IMPERIAL MARCH
         ; orden    1  2  3  4   5   6  7   8   9  10 11 12  13  14  15  16  17  18
         ; nota     G  G  G  D#  A#  G  D#  A#  G  D  D  D   D#  A#  F#  D#  A#  G
         ; octava   3  3  3  3   3   3  3   3   3  4  4  4   4   3   3   3   3   3
         ; avance   x  x  x  x   x   x  x   x   x  x  x  x       x       x   x   x
         ;
         ; Disposicion de LEDS
         ;
         ;                   PD0   PD1                  PD2  PD3
         ;                   sec1 sec2                 sec2  sec1
         ;
         ;
         ;
         ;                              DARTH VADER
         ;
         ;
         ;
         ;                   PD4   PD5                  PD6  PD7
         ;                   sec1 sec2                 sec2  sec1
         ;
         ;
         ;
         ;    G   = 392Hz
         ;    A#  = 466Hz
         ;    D#  = 311Hz
         ;    D4  = 587Hz
         ;    F#  = 370Hz	
         ;    D#4 = 622Hz
         
          start:
00002d e004      	ldi temp, high(ramend)
00002e bf0e      	out SPH, temp
00002f e50f      	ldi temp, low(ramend)
000030 bf0d      	out SPL, temp
000031 e002      	ldi temp, 2
000032 bb07      	out ddrb, temp  		;OC1A salida
000033 ef0f      	ldi temp, $FF
000034 bb01      	out ddrd, temp       ;PORTD como salida
000035 e000      	ldi temp, 0
000036 bb02      	out portd, temp      ;comenzan apagados
000037 e071      	ldi notas, 1         ;inicializamos a la primera nota
000038 e050      	ldi silencio, 0
000039 e060      	ldi cont, 0
00003a e020      	ldi sonar, 0
00003b e939      	ldi sec1, 0b10011001
00003c e646      	ldi sec2, 0b01100110
00003d dfe6      	rcall conf_timer1
         
00003e 9478      	SEI
         	
          imperial_march:
00003f 3071         cpi notas, 1
000040 f171      	breq notaG
000041 3072      	cpi notas, 2
000042 f161      	breq notaG
000043 3073      	cpi notas, 3
000044 f151      	breq notaG
000045 3074      	cpi notas, 4
000046 f0f1      	breq notaDsharpnollega
000047 3075      	cpi notas, 5
000048 f0e9      	breq notaAsharpnollega
000049 3076      	cpi notas, 6
00004a f121      	breq notaG
00004b 3077      	cpi notas, 7
00004c f0c1      	breq notaDsharpnollega
00004d 3078      	cpi notas, 8
00004e f0b9      	breq notaAsharpnollega
00004f 3079      	cpi notas, 9
000050 f0c1      	breq notaG2nollega
000051 307a      	cpi notas, 10
000052 f0b9      	breq notaD4nollega
000053 307b      	cpi notas, 11
000054 f0a9      	breq notaD4nollega
000055 307c      	cpi notas, 12
000056 f099      	breq notaD4nollega
000057 307d      	cpi notas, 13
000058 f079      	breq notaDsharp4nollega
000059 307e      	cpi notas, 14
00005a f049      	breq notaAsharpcarajonollega
00005b 307f      	cpi notas, 15
00005c f051      	breq notaFsharpnollega
00005d 3170      	cpi notas, 16
00005e f1c9      	breq notaDsharp
00005f 3171      	cpi notas, 17
000060 f029      	breq notaAsharpnollega
000061 3172      	cpi notas, 18
000062 f061      	breq notaG
000063 c007         rjmp forever
         
          notaAsharpcarajonollega:
000064 c0d3      	rjmp notaAsharpcarajo
         	
          notaDsharpnollega:
000065 c032      	rjmp notaDsharp
         
          notaAsharpnollega:
000066 c054      	rjmp notaAsharp
         
          notaFsharpnollega:
000067 c0eb      	rjmp notaFsharp
         	
          notaDsharp4nollega:
000068 c0b3      	rjmp notaDsharp4
         		
          notaG2nollega:
000069 c076      	rjmp notaG2
         	
          notaD4nollega:
00006a c092      	rjmp notaD4	
         	
          forever:
00006b 94f8         CLI
00006c e000         ldi temp, 0
00006d bb08         out portb, temp
00006e cffc      	rjmp forever
         ;  Para determinar el valor de OCR1A:
         ;  P=1
         ;  N = fin/(2*fout) - 1
         
         ;********************************PRIMERA NOTA**********************************
         ;********************************SEGUNDA NOTA**********************************
         ;********************************TERCERA NOTA**********************************
         ;**********************************SEXTA NOTA**********************************
         ;***************************DECIMOOCTAVA NOTA**********************************
          notaG:
00006f e020      	ldi sonar, 0
000070 e004      	ldi temp, high(1275)
000071 bd0b      	out OCR1AH, temp
000072 ef0b      	ldi temp, low(1275)
000073 bd0a      	out OCR1AL, temp
000074 e002      	ldi temp, 2
000075 bb07      	out ddrb, temp
000076 9573      	inc notas
000077 ef1b      	ldi cont10ms, 251      ;tiempo que durara la nota
000078 3071      	cpi notas, 1
000079 f041      	breq sec1_G
00007a 3072      	cpi notas, 2
00007b f041      	breq sec2_G
00007c 3073      	cpi notas, 3
00007d f021      	breq sec1_G
00007e 3076      	cpi notas, 6
00007f f021      	breq sec2_G
000080 3172      	cpi notas, 18
000081 f011      	breq sec2_G
          sec1_G:
000082 bb32      	out portd, sec1
000083 c002      	rjmp sonando1236_18
          sec2_G:
000084 bb42      	out portd, sec2
000085 c000      	rjmp sonando1236_18
         	
          sonando1236_18:
000086 3051      	cpi silencio, 1        ;aqui "ocurren" interrupciones
000087 f7f1      	brne sonando1236_18    ;sino son iguales sigo reproduciendo la nota
         	                       ;si llego aca sono lo que debia sonar
000088 e021      	ldi sonar, 1           ;le toca el silencio al silencio en si
000089 ed1c      	ldi cont10ms, 220      ;tiempo que durara el silencio
00008a e000      	ldi temp, 0<<COM1A0    ;dejamos de emitir la nota
00008b bd0f      	out TCCR1A, temp
00008c e000      	ldi temp, 0
00008d bb08      	out portb, temp
         	
          silencio1236_18:
00008e 3050         cpi silencio, 0        ;aqui "ocurren" interrupciones
00008f e000         ldi temp, 0
000090 bb02         out portd, temp        ;apagamos leds
000091 f7e1      	brne silencio1236_18
000092 e400      	ldi temp, 1<<COM1A0
000093 bd0f      	out TCCR1A, temp
000094 e000      	ldi temp, 0
000095 bd0b      	out OCR1AH, temp
000096 bd0a      	out OCR1AL, temp
000097 cfa7      	rjmp imperial_march
         ;******************************************************************************
         
         
         ;*********************************CUARTA NOTA**********************************
         ;*********************************SETIMA NOTA**********************************
         ;****************************DECIMOSEXTA NOTA**********************************
          notaDsharp:
000098 e020      	ldi sonar, 0
000099 e006      	ldi temp, high(1607)
00009a bd0b      	out OCR1AH, temp
00009b e407      	ldi temp, low(1607)
00009c bd0a      	out OCR1AL, temp
00009d 9573      	inc notas
00009e eb15      	ldi cont10ms, 181   ;tiempo que durara la nota
00009f 3074      	cpi notas, 4
0000a0 f031      	breq sec2_Dsharp
0000a1 3077      	cpi notas, 7
0000a2 f011      	breq sec1_Dsharp
0000a3 3170      	cpi notas, 16
0000a4 f011      	breq sec2_Dsharp
         
          sec1_Dsharp:
0000a5 bb32      	out portd, sec1
0000a6 c002      	rjmp sonando47_16
          sec2_Dsharp:
0000a7 bb42      	out portd, sec2
0000a8 c000      	rjmp sonando47_16	
         	
         	
          sonando47_16:
0000a9 3051      	cpi silencio, 1     ;aqui "ocurren" interrupciones
0000aa f7f1      	brne sonando47_16   ;sino son iguales sigo reproduciendo la nota
         	                    ;si llego aca sono lo que debia sonar
0000ab e021      	ldi sonar, 1        ;le toca el silencio al silencio en si
0000ac e312      	ldi cont10ms, 50    ;tiempo que durara el silencio
0000ad e000      	ldi temp, 0<<COM1A0 ;dejamos de emitir la nota
0000ae bd0f      	out TCCR1A, temp
0000af e000      	ldi temp, 0
0000b0 bb08      	out portb, temp
          silencio47_16:
0000b1 3050         cpi silencio, 0     ;aqui "ocurren" interrupciones
0000b2 e000         ldi temp, 0
0000b3 bb02         out portd, temp
0000b4 f7e1      	brne silencio47_16
0000b5 e400      	ldi temp, 1<<COM1A0
0000b6 bd0f      	out TCCR1A, temp
0000b7 e000      	ldi temp, 0
0000b8 bd0b      	out OCR1AH, temp
0000b9 bd0a      	out OCR1AL, temp
0000ba cf84      	rjmp imperial_march
         ;******************************************************************************
         
         
         ;*********************************QUINTA NOTA**********************************
         ;*********************************OCTAVA NOTA**********************************	
         ;***************************DECIMOSETIMA NOTA**********************************
          notaAsharp:
0000bb e020      	ldi sonar, 0
0000bc e004      	ldi temp, high(1072)
0000bd bd0b      	out OCR1AH, temp
0000be e300      	ldi temp, low(1072)
0000bf bd0a      	out OCR1AL, temp
0000c0 9573      	inc notas
0000c1 ec18      	ldi cont10ms, 200    ;tiempo que durara la nota
0000c2 3075      	cpi notas, 5
0000c3 f031      	breq sec1_Asharp
0000c4 3078      	cpi notas, 8
0000c5 f031      	breq sec2_Asharp
0000c6 307e      	cpi notas, 14
0000c7 f021      	breq sec2_Asharp
0000c8 3171      	cpi notas, 17
0000c9 f001      	breq sec1_Asharp
         
          sec1_Asharp:
0000ca bb32      	out portd, sec1
0000cb cfdd      	rjmp sonando47_16
          sec2_Asharp:
0000cc bb42      	out portd, sec2
0000cd cfdb      	rjmp sonando47_16		
         	
          sonando58_14_17:
0000ce 3051      	cpi silencio, 1      ;aqui "ocurren" interrupciones
0000cf f7f1      	brne sonando58_14_17 ;sino son iguales sigo reproduciendo la nota
         	                     ;si llego aca sono lo que debia sonar
0000d0 e021      	ldi sonar, 1         ;le toca el silencio al silencio en si
0000d1 e718      	ldi cont10ms, 120    ;tiempo que durara el silencio
0000d2 e000      	ldi temp, 0<<COM1A0  ;dejamos de emitir la nota
0000d3 bd0f      	out TCCR1A, temp
0000d4 e000      	ldi temp, 0
0000d5 bb08      	out portb, temp
         	
          silencio58_14_17:
0000d6 3050         cpi silencio, 0      ;aqui "ocurren" interrupciones
0000d7 e000         ldi temp, 0
0000d8 bb02         out portd, temp
0000d9 f7e1      	brne silencio58_14_17
0000da e400      	ldi temp, 1<<COM1A0
0000db bd0f      	out TCCR1A, temp
0000dc e000      	ldi temp, 0
0000dd bd0b      	out OCR1AH, temp
0000de bd0a      	out OCR1AL, temp
         
0000df cf5f      	rjmp imperial_march
         ;******************************************************************************
         
         
         ;*********************************NOVENA NOTA**********************************
          notaG2:
0000e0 e020      	ldi sonar, 0
0000e1 e004      	ldi temp, high(1275)
0000e2 bd0b      	out OCR1AH, temp
0000e3 ef0b      	ldi temp, low(1275)
0000e4 bd0a      	out OCR1AL, temp
0000e5 9573      	inc notas
0000e6 ef1b      	ldi cont10ms, 251    ;con ese valor espera el tiempo deseado
         	
          sonando9:
0000e7 3051      	cpi silencio, 1     ;aqui "ocurren" interrupciones
0000e8 f7f1      	brne sonando9
0000e9 e050      	ldi silencio, 0
         	
          sonando9_extra:	
0000ea 3051      	cpi silencio, 1     ;aqui "ocurren" interrupciones
0000eb f7f1      	brne sonando9_extra  ;si llego aca sono lo que debia sonar
         	
0000ec e021      	ldi sonar, 1        ;le toca el silencio al silencio en si
0000ed ed1c      	ldi cont10ms, 220     ;valor para que no suene
0000ee e000      	ldi temp, 0<<COM1A0 ;dejamos de emitir la nota
0000ef bd0f      	out TCCR1A, temp
0000f0 e000      	ldi temp, 0
0000f1 bb08      	out portb, temp
         	
          silencio9:
0000f2 3050         cpi silencio, 0   ;aqui "ocurren" interrupciones
0000f3 f7f1      	brne silencio9
0000f4 e051      	ldi silencio, 1
         	
          silencio9_extra:
0000f5 3050      	cpi silencio, 0
0000f6 f7f1      	brne silencio9_extra
         	
0000f7 e400      	ldi temp, 1<<COM1A0
0000f8 bd0f      	out TCCR1A, temp
0000f9 e000      	ldi temp, 0
0000fa bd0b      	out OCR1AH, temp
0000fb bd0a      	out OCR1AL, temp
0000fc cf42      	rjmp imperial_march
         ;******************************************************************************
         
         
         ;*********************************DECIMA NOTA**********************************
         ;*******************************UNDECIMA NOTA**********************************
         ;******************************DUODECIMA NOTA**********************************
          notaD4:
0000fd e020      	ldi sonar, 0
0000fe e003      	ldi temp, high(851)
0000ff bd0b      	out OCR1AH, temp
000100 e503      	ldi temp, low(851)
000101 bd0a      	out OCR1AL, temp
000102 9573      	inc notas
000103 ef1b      	ldi cont10ms, 251     ;el valor calculado enverdad es 384
         	
          sonando10_11_12:
000104 3051      	cpi silencio, 1       ;aqui "ocurren" interrupciones
000105 f7f1      	brne sonando10_11_12  ;sino son iguales sigo reproduciendo la nota
000106 e050      	ldi silencio, 0
000107 e815      	ldi cont10ms, 133     ;por esto se usan 2 veces, no cabe en 8 bits
         	
          sonando10_11_12_extra:
000108 3051      	cpi silencio, 1
000109 f7f1      	brne sonando10_11_12_extra
         	                      ;si llego aca sono lo que debia sonar
00010a e021      	ldi sonar, 1          ;le toca el silencio al silencio en si
00010b ef1b      	ldi cont10ms, 251     ;el verdadero valor es 336
00010c e000      	ldi temp, 0<<COM1A0 ;dejamos de emitir la nota
00010d bd0f      	out TCCR1A, temp
00010e e000      	ldi temp, 0
00010f bb08      	out portb, temp
         	
          silencio10_11_12:
000110 3050         cpi silencio, 0       ;aqui "ocurren" interrupciones
000111 f7f1      	brne silencio10_11_12
000112 e051      	ldi silencio, 1
000113 e515      	ldi cont10ms, 85
         	
          silencio10_11_12_extra:
000114 3050      	cpi silencio, 0
000115 f7f1      	brne silencio10_11_12_extra
         		
000116 e400      	ldi temp, 1<<COM1A0
000117 bd0f      	out TCCR1A, temp
000118 e000      	ldi temp, 0
000119 bd0b      	out OCR1AH, temp
00011a bd0a      	out OCR1AL, temp
00011b cf23      	rjmp imperial_march
         ;******************************************************************************
         
         
         ;******************************DECIMOTERCER NOTA*******************************
          notaDsharp4:
00011c e020      	ldi sonar, 0
00011d e003      	ldi temp, high(803)
00011e bd0b      	out OCR1AH, temp
00011f e203      	ldi temp, low(803)
000120 bd0a      	out OCR1AL, temp
000121 9573      	inc notas
000122 ef1b      	ldi cont10ms, 251   ;valor para que suene
         	
          sonando13:
000123 3051      	cpi silencio, 1       ;aqui "ocurren" interrupciones
000124 f7f1      	brne sonando13  ;sino son iguales sigo reproduciendo la nota
000125 e050      	ldi silencio, 0
000126 e916      	ldi cont10ms, 150
         	
          sonando13_extra:
000127 3051      	cpi silencio, 1
000128 f7f1      	brne sonando13_extra
         	                      ;si llego aca sono lo que debia sonar
000129 e021      	ldi sonar, 1          ;le toca el silencio al silencio en si
00012a e51a      	ldi cont10ms, 90     ;valor para que no suene
00012b e000      	ldi temp, 0<<COM1A0 ;dejamos de emitir la nota
00012c bd0f      	out TCCR1A, temp
00012d e000      	ldi temp, 0
00012e bb08      	out portb, temp
         	
          silencio13:
00012f 3050         cpi silencio, 0       ;aqui "ocurren" interrupciones
000130 f7f1      	brne silencio13
000131 e051      	ldi silencio, 1
         			
000132 e400      	ldi temp, 1<<COM1A0
000133 bd0f      	out TCCR1A, temp
000134 e000      	ldi temp, 0
000135 bd0b      	out OCR1AH, temp
000136 bd0a      	out OCR1AL, temp
000137 cf07      	rjmp imperial_march
         ;******************************************************************************
         
         
         ;***************************DECIMOCUARTA NOTA**********************************
          notaAsharpcarajo:
000138 e020      	ldi sonar, 0
000139 e004      	ldi temp, high(1072)
00013a bd0b      	out OCR1AH, temp
00013b e300      	ldi temp, low(1072)
00013c bd0a      	out OCR1AL, temp
00013d 9573      	inc notas
00013e eb14      	ldi cont10ms, 180    ;tiempo que durara la nota
00013f bb42         out portd, sec2	
000140 e050      	ldi silencio, 0
          sonando14:
000141 3051      	cpi silencio, 1      ;aqui "ocurren" interrupciones
000142 f7f1      	brne sonando14 ;sino son iguales sigo reproduciendo la nota
         	                     ;si llego aca sono lo que debia sonar
000143 e021      	ldi sonar, 1         ;le toca el silencio al silencio en si
000144 e31c      	ldi cont10ms, 60    ;tiempo que durara el silencio
000145 e000      	ldi temp, 0<<COM1A0  ;dejamos de emitir la nota
000146 bd0f      	out TCCR1A, temp
000147 e000      	ldi temp, 0
000148 bb08      	out portb, temp
         	
          silencio14:
000149 3050         cpi silencio, 0      ;aqui "ocurren" interrupciones
00014a e000         ldi temp, 0
00014b bb02         out portd, temp
00014c f7e1      	brne silencio14
00014d e400      	ldi temp, 1<<COM1A0
00014e bd0f      	out TCCR1A, temp
00014f e000      	ldi temp, 0
000150 bd0b      	out OCR1AH, temp
000151 bd0a      	out OCR1AL, temp
         
000152 ceec      	rjmp imperial_march
         ;******************************************************************************
         
         
         ;******************************DECIMOQUINTA NOTA*******************************
          notaFsharp:
000153 e020         ldi sonar, 0
000154 e005      	ldi temp, high(1350)
000155 bd0b      	out OCR1AH, temp
000156 e406      	ldi temp, low(1350)
000157 bd0a      	out OCR1AL, temp
000158 9573      	inc notas
000159 ef1b      	ldi cont10ms, 251   ;valor para que suene
          sonando15:
00015a 3051      	cpi silencio, 1       ;aqui "ocurren" interrupciones
00015b f7f1      	brne sonando15  ;sino son iguales sigo reproduciendo la nota
         	                      ;si llego aca sono lo que debia sonar
00015c e021      	ldi sonar, 1          ;le toca el silencio al silencio en si
00015d ef1b      	ldi cont10ms, 251       ;valor para que no suene
00015e e000      	ldi temp, 0<<COM1A0 ;dejamos de emitir la nota
00015f bd0f      	out TCCR1A, temp
000160 e000      	ldi temp, 0
000161 bb08      	out portb, temp
          silencio15:
000162 3050         cpi silencio, 0       ;aqui "ocurren" interrupciones
000163 f7f1      	brne silencio15
000164 e400      	ldi temp, 1<<COM1A0
000165 bd0f      	out TCCR1A, temp
000166 e000      	ldi temp, 0
000167 bd0b      	out OCR1AH, temp
000168 bd0a      	out OCR1AL, temp
         
000169 ced5      	rjmp imperial_march
         ;******************************************************************************	
         
         
         
         
         
         

Assembly complete with no errors.
